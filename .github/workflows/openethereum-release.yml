name: OpenEthereum Update

on:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron:  '32 */6 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/cache@v2.1.4
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install -r requirements.txt
    - name: install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1
      with:
        version: 7.4.2
    - name: Download OpenEthereum
      env:
        SOURCE_PUSH_TOKEN: ${{ secrets.SOURCE_PUSH_TOKEN }}
        CURRENT_VERSION: ${{ secrets.LAST_NETHERMIND_VERSION }}
      run: python download-latest-release.py
#    - if: ${{ env.DOWNLOADED_VERSION != '' }}
#      uses: hmanzur/actions-set-secret@2.0.2
#      with:
#        name: 'LAST_NETHERMIND_VERSION'
#        value: ${{ env.DOWNLOADED_VERSION }}
#        repository: credfeto/openethereum-updater
#        token: ${{ secrets.SOURCE_PUSH_TOKEN }}
    - if: ${{ env.DOWNLOADED_VERSION != '' }}
      name: List files
      run: |
        pwd
        ls -la
        echo ${{env.DOWNLOADED_FILE}}
    - if: ${{ env.DOWNLOADED_VERSION != '' }}
      name: Push package
      run: octo push --package *.zip  --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_API_KEY}}" --enableServiceMessages --debug --overwrite-mode=IgnoreIfExists
    - if: ${{ env.DOWNLOADED_VERSION != '' }}
      name: Deploy xDai
      run: octo create-release --project=OpenEthereumxDai --version=${{env.DOWNLOADED_VERSION}} --channel=Work --package=nethermind.windows-amd64:${{env.DOWNLOADED_VERSION}} --deployTo=Work --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_API_KEY}}" --enableServiceMessages --debug
    - if: ${{ env.DOWNLOADED_VERSION != '' }}
      name: Deploy Rinkeby
      run: octo create-release --project=OpenEthereumRinkeby --version=${{env.DOWNLOADED_VERSION}} --channel=Work --package=nethermind.windows-amd64:${{env.DOWNLOADED_VERSION}} --deployTo=Work --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_API_KEY}}" --enableServiceMessages --debug
    - if: ${{ env.DOWNLOADED_VERSION != '' }}
      name: Deploy MainNet
      run: octo create-release --project=OpenEthereumMainNet --version=${{env.DOWNLOADED_VERSION}} --channel=Work --package=nethermind.windows-amd64:${{env.DOWNLOADED_VERSION}} --deployTo=Work --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_API_KEY}}" --enableServiceMessages --debug
